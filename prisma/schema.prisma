generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id           String           @id @default(uuid())
  name         String?
  email        String           @unique
  password     String
  role         Role             @default(USER)
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  refreshTokens RefreshToken[]
  progress     UserProgress[]
}

model Track {
  id          String    @id @default(uuid())
  title       String
  description String?
  modules     Module[]
  createdAt   DateTime  @default(now())
}

model Module {
  id        String   @id @default(uuid())
  title     String
  order     Int
  track     Track    @relation(fields: [trackId], references: [id])
  trackId   String
  videos    Video[]
}

model Video {
  id        String   @id @default(uuid())
  title     String
  url       String
  order     Int
  duration  Int?
  module    Module   @relation(fields: [moduleId], references: [id])
  moduleId  String
  progress  UserProgress[]
}

model UserProgress {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  video     Video    @relation(fields: [videoId], references: [id])
  videoId   String
  watched   Boolean  @default(false)
  watchedAt DateTime?
  updatedAt DateTime @updatedAt
  @@unique([userId, videoId])
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade,   onUpdate: Cascade)
  userId    String
  revoked   Boolean  @default(false)
  expiresAt DateTime
  createdAt DateTime @default(now())
}
